<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <!-- 配置ehcache 二级缓存-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:config/cache/shiro-ehcache.xml"></property>
    </bean>

    <!-- 注入自己定义Realm-->
    <bean id="userRealm" class="com.silita.commons.shiro.MyRealm">
        <property name="cachingEnabled" value="true" />
        <property name="authenticationCachingEnabled" value="true" />
        <property name="authenticationCacheName" value="authenticationCache" />
        <property name="authorizationCachingEnabled" value="true" />
        <property name="authorizationCacheName" value="authorizationCache" />
    </bean>

    <!-- Subject工厂 -->
    <bean id="subjectFactory"
          class="com.silita.commons.shiro.StatelessDefaultSubjectFactory"/>

    <bean id="defaultSessionStorageEvaluator" class="org.apache.shiro.mgt.DefaultSessionStorageEvaluator">
        <property name="sessionStorageEnabled" value="false"/>
    </bean>

    <bean id="subjectDAO" class="org.apache.shiro.mgt.DefaultSubjectDAO">
        <property name="sessionStorageEvaluator" ref="defaultSessionStorageEvaluator"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>

    <!-- 配置SecurityManager的管理 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 配置你需要使用的Realms -->
        <property name="realm" ref="userRealm"/>
        <property name="subjectDAO" ref="subjectDAO"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="subjectFactory" ref="subjectFactory"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 自定义过滤器 -->
    <bean id="JWTFilter" class="com.silita.commons.shiro.filter.JWTFilter" />
    <bean id="JWTAuthenticationFilter" class="com.silita.commons.shiro.filter.JWTAuthenticationFilter" />

    <!-- 配置shiro过滤器freemarker跳转先要请求后台 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="filters">
            <map>
                <entry key="jwt" value-ref="JWTFilter"/>
                <entry key="jwtAuthc" value-ref="JWTAuthenticationFilter"/>
            </map>
        </property>
        <!-- shiro里面需要针对于所有的路径进行配置，所有的配置需要通过文本的形式设置 -->
        <property name="filterChainDefinitionMap">
            <map>
                <entry key="/**" value="jwtAuthc"/>
                <!--<entry key="/authorize/login" value="anon"/>-->
                <!--<entry key="/manager/druid/*" value="anon"/>-->
                <!--<entry key="/**" value="jwt"/>-->
            </map>
        </property>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>