<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silita.dao.DicCommonMapper">

    <insert id="insertDicCommon" parameterType="com.silita.model.DicCommon">
        INSERT INTO
        dic_common(
          `id`,`parent_id`, `name`, `code`, `type`,
          `order_no`, `is_leaf`, `desc`, `remark`, `create_time`,
          `create_by`
        )
        VALUES(
          #{id}, #{parentId}, #{name}, #{code}, #{type},
          #{orderNo}, #{isLeaf}, #{desc}, #{remark}, NOW(),
          #{createBy}
        )
    </insert>

    <update id="updateDicCommonById" parameterType="com.silita.model.DicCommon">
        UPDATE dic_common SET
        <if test="parentId !=null and parentId!=''">
            `parent_id` = #{parentId},
        </if>
        <if test="name !=null and name!=''">
            `name` = #{name},
        </if>
        <if test="type !=null and type!=''">
            `type` = #{type},
        </if>
        <if test="orderNo !=null and orderNo!=''">
            `order_no` = #{orderNo},
        </if>
        <if test="isLeaf !=null and isLeaf!=''">
            `is_leaf` = #{isLeaf},
        </if>
        <if test="desc !=null and desc!=''">
            `desc` = #{desc},
        </if>
        <if test="remark !=null and remark!=''">
            `remark` = #{remark},
        </if>
        <if test="updateBy !=null and updateBy!=''">
            `update_by` = #{updateBy},
        </if>
        `update_time` = NOW()
        WHERE id = #{id}
    </update>

    <select id="listDicCommonByType" parameterType="com.silita.model.DicCommon" resultType="com.silita.model.DicCommon">
        SELECT *
        FROM dic_common WHERE `type` = #{type}
        LIMIT #{start}, #{pageSize}
    </select>

    <select id="getDicCommonCountByType" parameterType="com.silita.model.DicCommon" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM dic_common WHERE `type` = #{type}
    </select>

    <delete id="deleteDicCommonByIds" parameterType="String">
        DELETE FROM dic_common
        <where>
            id IN
            <foreach collection="array" open="(" close=")" separator="," item="ele">
                #{ele}
            </foreach>
        </where>
    </delete>

   <!-- <select id="queryParentGrade" resultType="java.util.Map">
        select id as id
                ,`name` as `name`
                ,`code` as `code`
        from dic_common
        where `type` = 'qua_grade'
        AND (parent_id IS NULL OR parent_id = '')
    </select>-->

    <select id="queryParentGrade" resultType="java.util.Map">
        select id as id
                ,`name` as `name`
                ,`code` as `code`
        from dic_common
        where `type` = 'qua_grade'
        AND (parent_id IS NULL OR parent_id = '')
    </select>

    <select id="queryGradeList" resultType="java.util.Map" parameterType="java.util.Map">
        select id as id
                ,`name` as `name`
                ,`code` as `code`
        from dic_common
        where `type` = 'qua_grade'
        and parent_id = #{parentId}
        order by create_time desc
    </select>

    <select id="queryDicCommonGradeList" resultType="java.util.Map" parameterType="map">
        SELECT
          t.id,
          t.parent_id AS typology,
          t.name,
          t.code
        FROM
          biaodaa_admin.dic_common t
        WHERE t.type = 'qua_grade'
        <if test="name != null and name != ''">
            and t.name = #{name}
        </if>
        ORDER BY t.parent_id,
          t.order_no
    </select>

    <select id="queryDicCommCountByName" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(1)
        from dic_common
        where `type` = #{type}
        and `name` = #{name}
        <if test="parentId != null and parentId != ''">
            and parent_id = #{parentId}
        </if>
        <if test="id != null and id != ''">
            and id != #{id}
        </if>
    </select>

    <select id="listDicCommonByIds" parameterType="String" resultType="com.silita.model.DicCommon">
        SELECT * FROM dic_common
        <where>
            id IN
            <foreach collection="array" open="(" close=")" separator="," item="ele">
                #{ele}
            </foreach>
        </where>
    </select>

    <select id="listDicCommonNameByType" parameterType="com.silita.model.DicCommon" resultType="Map">
        SELECT `name`, `code`
        FROM dic_common WHERE `type` = #{type}
        LIMIT #{start}, #{pageSize}
    </select>

    <select id="queryDicComm" resultType="com.silita.model.DicCommon" parameterType="java.lang.String">
        select *
        from dic_common
        where `code` = #{code}
    </select>

    <select id="getNameByCode" parameterType="String" resultType="String">
       SELECT `name` FROM dic_common WHERE `code` = #{code}
    </select>

    <select id="getCommonNameById" parameterType="String" resultType="String">
        SELECT `name` FROM `dic_common` WHERE `id` = #{id}
    </select>

    <select id="queryQuaGrade" resultType="com.silita.model.DicCommon" parameterType="java.lang.String">
        select *
        from dic_common
        where `name` = #{name}
        AND `type` = 'qua_grade'
    </select>
    <!--通过子级code找到对应的等级-->
    <select id="queryGradeListMap" resultType="java.util.Map" parameterType="map">
        SELECT
        c.name,
        c.code as code,
        c.parent_id AS parentId
        FROM `dic_common` c
        JOIN `rel_qua_grade` r
        ON c.code=r.grade_code
        WHERE r.qua_code=#{code}
        order by order_no
    </select>
    <!--资质等级下拉选项-->
    <select id="queryGradePullDownListMap" resultType="java.util.Map" parameterType="map">
        SELECT
          c.name,
          c.code
        FROM
          dic_common c
        WHERE c.type = 'qua_grade'
        <if test="parentId != null and parentId != ''">
            AND c.parent_id = #{parentId}
        </if>
        <if test="listMapCode != null and listMapCode.size >0">
            AND (
            <foreach collection="listMapCode" item="list" separator="or">
                c.code &lt;&gt; #{list.code}
            </foreach>
            )
        </if>


    </select>
    <select id="queryPbMode" resultType="java.util.Map" parameterType="map">
        SELECT t.name,t.name FROM `dic_common` t WHERE t.type &lt;&gt; 'qua_grade'
    </select>

</mapper>