<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silita.dao.DicAliasMapper">

    <insert id="insertDicAlias" parameterType="com.silita.model.DicAlias">
        INSERT INTO
        dic_alias(
          `id`, `name`, `code`, `std_code`, `std_type`,
          `desc`, `remark`, `create_time`, `create_by`
        )
        VALUES (
          #{id}, #{name}, #{code}, #{stdCode}, #{stdType},
          #{desc}, #{remark}, NOW(), #{createBy}
        )
    </insert>
    <insert id="insertAilas" parameterType="java.util.List">
        INSERT INTO dic_alias (
        `id`,
        `name`,
        `code`,
        `std_code`,
        `std_type`,
        `create_time`,
        `create_by`
        )
        VALUES
        <foreach collection="list" item="list" separator=",">
            (
            #{list.id}, #{list.name}, #{list.code}, #{list.stdCode}, #{list.stdType},
            NOW(), #{list.createBy}
            )
        </foreach>
    </insert>
    <insert id="insertLevelAilas" parameterType="map">
        INSERT INTO dic_alias (
        `id`,
        `name`,
        `code`,
        `std_code`,
        `std_type`,
        `create_time`,
        `create_by`
        )
        VALUES
            (
            #{id}, #{name}, #{code}, #{stdCode}, #{stdType},
            NOW(), #{createBy}
            )
    </insert>
    <insert id="addQualAilas" parameterType="map">

    </insert>

    <update id="updateDicAliasById" parameterType="com.silita.model.DicAlias">
        UPDATE dic_alias SET
        <if test="name !=null and name!=''">
            `name` = #{name},
        </if>
        <if test="code !=null and code!=''">
            `code` = #{code},
        </if>
        <if test="stdCode !=null and stdCode!=''">
            `std_code` = #{stdCode},
        </if>
        <if test="stdType !=null and stdType!=''">
            `std_type` = #{stdType},
        </if>
        <if test="desc !=null and desc!=''">
            `desc` = #{desc},
        </if>
        <if test="remark !=null and remark!=''">
            `remark` = #{remark},
        </if>
        <if test="updateBy !=null and updateBy!=''">
            `update_by` = #{updateBy},
        </if>
        `update_time` = NOW()
        WHERE id = #{id}
    </update>
    <update id="updateStdCode" parameterType="map">
        UPDATE `dic_alias` SET std_code = #{stdCodes},update_time = NOW(),update_by = #{updateBy} where std_code = #{stdCode}
    </update>

    <select id="listDicAliasByStdCode" parameterType="com.silita.model.DicAlias" resultType="java.util.Map">
        SELECT
        `id`,
        `name`,
        `code`,
        `std_code` as stdCode,
        `std_type` as stdType,
        `create_time` as createTime
        FROM dic_alias
        WHERE 1=1
        <if test="stdCode != null and stdCode != ''">
            and `std_code` = #{stdCode}
        </if>
        <if test="name != null and name != ''">
            and `name` like CONCAT('%',#{name},'%')
        </if>
        <if test="stdType != null and stdType != ''">
            and std_type = #{stdType}
        </if>
        <if test="rank != null and rank != ''">
            order by ${rank}
        </if>
    </select>

    <select id="getDicAliasCountByStdCode" parameterType="com.silita.model.DicAlias" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM dic_alias WHERE `std_code` = #{stdCode}
    </select>

    <delete id="deleteDicAliasByIds" parameterType="String">
        DELETE FROM dic_alias
        <where>
            id IN
            <foreach collection="array" open="(" separator="," close=")" item="ele">
                #{ele}
            </foreach>
        </where>
    </delete>

    <select id="queryAliasByName" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1)
        from dic_alias
        where 1=1
        and `name` = #{name}
        <if test="stdCode != null and stdCode != ''">
            and `std_code` = #{stdCode}
        </if>
        <if test="stdType != null and stdType != ''">
            and `std_type` = #{stdType}
        </if>
        <if test="id != null and id != ''">
            and id != #{id}
        </if>
    </select>

    <select id="queryAliasListCode" resultType="java.util.Map" parameterType="map">
        SELECT
        t.id,
        t.name,
        t.std_code as stdCode
        FROM
        biaodaa_admin.`dic_alias` t
        WHERE t.std_code = #{stdCode}
        <if test="name != null and name != ''">
            and t.name like CONCAT('%',#{name},'%')
        </if>
        order by t.create_time desc
        LIMIT #{start}, #{pageSize}
    </select>

    <select id="queryAliasListCodeCount" resultType="java.lang.Integer" parameterType="map">
        SELECT
        ifnull(count(1),0)
        FROM
        biaodaa_admin.`dic_alias` t
        WHERE t.std_code = #{stdCode}
        <if test="name != null and name != ''">
            and t.name like CONCAT('%',#{name},'%')
        </if>
    </select>

    <select id="queryName" resultType="java.lang.Integer" parameterType="map">
        SELECT
          IFNULL(COUNT(1), 0)
        FROM
          biaodaa_admin.`dic_alias` t
        WHERE t.std_code = #{stdCode} and t.name = #{name}
    </select>

    <delete id="deleteDicAliasByStdCodes" parameterType="String">
        DELETE FROM dic_alias
        <where>
            std_code IN
            <foreach collection="array" open="(" close=")" separator="," item="ele">
                #{ele}
            </foreach>
        </where>
    </delete>
    <delete id="delAilasByIds" parameterType="map">
        delete from dic_alias
        <where>
            id IN
            <foreach collection="ids" open="(" close=")" separator="," item="ids">
                #{ids}
            </foreach>
        </where>
    </delete>
    <delete id="deleteAilas" parameterType="map">
        DELETE FROM biaodaa_admin.`dic_alias` WHERE std_code = #{stdCode}
    </delete>

</mapper>