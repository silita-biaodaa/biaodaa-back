<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silita.dao.TbNtTendersMapper" >

    <resultMap id="BaseResultMap" type="com.silita.model.TbNtTenders" >
        <id column="pkid" property="pkid" jdbcType="VARCHAR" />
        <result column="nt_id" property="ntId" jdbcType="VARCHAR" />
        <result column="edit_code" property="editCode" jdbcType="VARCHAR" />
        <result column="segment" property="segment" jdbcType="INTEGER" />
        <!--<result column="pro_sum" property="proSum" jdbcType="DOUBLE" />-->
        <result column="enroll_addr" property="enrollAddr" jdbcType="VARCHAR" />
        <result column="opening_addr" property="openingAddr" jdbcType="VARCHAR" />
        <result column="enroll_end_time" property="enrollEndTime" jdbcType="TIMESTAMP" />
        <result column="bid_end_time" property="bidEndTime" jdbcType="TIMESTAMP" />
        <!--<result column="pb_mode" property="pbMode" jdbcType="VARCHAR" />-->
        <result column="bid_bonds" property="bidBonds" jdbcType="VARCHAR" />
        <result column="bid_bonds_end_time" property="bidBondsEndTime" jdbcType="TIMESTAMP" />
        <result column="keep_bonds" property="keepBonds" jdbcType="DOUBLE" />
        <result column="other_bonds" property="otherBonds" jdbcType="DOUBLE" />
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
        <result column="opening_person" property="openingPerson" jdbcType="VARCHAR" />
        <result column="opening_file_fee" property="openingFileFee" jdbcType="DOUBLE" />
        <result column="other_fee" property="otherFee" jdbcType="DOUBLE" />
        <result column="tenderee" property="tenderee" jdbcType="VARCHAR" />
        <result column="tender_contact_person" property="tenderContactPerson" jdbcType="VARCHAR" />
        <result column="tender_contact_info" property="tenderContactInfo" jdbcType="VARCHAR" />
        <result column="proxy_contact_person" property="proxyContactPerson" jdbcType="VARCHAR" />
        <result column="proxy_contact_info" property="proxyContactInfo" jdbcType="VARCHAR" />
        <result column="pro_person" property="proPerson" jdbcType="VARCHAR" />
        <result column="social_security" property="socialSecurity" jdbcType="VARCHAR" />
        <result column="achievement" property="achievement" jdbcType="VARCHAR" />
        <result column="enroll_method" property="enrollMethod" jdbcType="VARCHAR" />
        <!--<result column="pro_duration" property="proDuration" jdbcType="VARCHAR" />-->
        <result column="completion_time" property="completionTime" jdbcType="TIMESTAMP" />
        <result column="is_flow" property="isFlow" jdbcType="BIT" />
        <result column="funds_provid" property="fundsProvid" jdbcType="VARCHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
        <result column="create_by" property="createBy" jdbcType="VARCHAR" />
        <result column="updated" property="updated" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
        <result column="biness_type" property="binessType" jdbcType="VARCHAR" />
        <result column="nt_category" property="ntCategory" jdbcType="VARCHAR" />
        <result column="nt_type" property="ntType" jdbcType="VARCHAR" />
        <result column="pub_date" property="pubDate" jdbcType="VARCHAR" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="cert_audit_addr" property="certAuditAddr" jdbcType="VARCHAR" />
        <result column="filing_pfm" property="filingPfm" jdbcType="VARCHAR" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="controll_sum" property="controllSum" jdbcType="DOUBLE" />
        <result column="pro_sum" property="proSum" jdbcType="DOUBLE" />
        <result column="pb_mode" property="pbMode" jdbcType="VARCHAR" />
        <result column="pro_duration" property="proDuration" jdbcType="VARCHAR" />
        <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
        <result column="county_code" property="countyCode" jdbcType="VARCHAR" />
        <result column="source" property="source" jdbcType="VARCHAR" />
    </resultMap>

    <select id="countNtTendersByNtIdAndSegment" parameterType="com.silita.model.TbNtTenders" resultType="Integer">
        SELECT COUNT(*) FROM ${tableName}
        WHERE 1=1
        <if test="ntId !=null and ntId!=''">
            AND nt_id = #{ntId}
        </if>
        <if test="segment !=null and segment!=''">
            AND segment = #{segment}
        </if>
    </select>

    <insert id="insertNtTenders" parameterType="com.silita.model.TbNtTenders">
        INSERT INTO ${tableName} (
          `nt_id`, `edit_code`, `segment`, `enroll_addr`, `cert_audit_addr`,
          `opening_addr`, `enroll_end_time`, `bid_end_time`, `bid_bonds`,
          `bid_bonds_end_time`, `keep_bonds`, `other_bonds`, `audit_time`, `opening_person`,
          `opening_file_fee`, `other_fee`, `tenderee`, `tender_contact_person`, `tender_contact_info`,
          `proxy_contact_person`, `proxy_contact_info`, `pro_person`, `social_security`, `achievement`,
          `enroll_method`, `completion_time`, `is_flow`, `funds_provid`, `filing_pfm`,
          `controll_sum`, `pro_sum`, `pro_duration`,`pb_mode`, `created`,
          `create_by`, `pkid`
        )
        values (
          #{ntId}, #{editCode}, #{segment}, #{enrollAddr}, #{certAuditAddr},
          #{openingAddr}, #{enrollEndTime}, #{bidEndTime}, #{bidBonds},
          #{bidBondsEndTime}, #{keepBonds}, #{otherBonds}, #{auditTime}, #{openingPerson},
          #{openingFileFee}, #{otherFee}, #{tenderee}, #{tenderContactPerson}, #{tenderContactInfo},
          #{proxyContactPerson}, #{proxyContactInfo}, #{proPerson}, #{socialSecurity}, #{achievement},
          #{enrollMethod}, #{completionTime}, #{isFlow}, #{fundsProvid}, #{filingPfm},
          #{controllSum}, #{proSum}, #{proDuration}, #{pbMode}, NOW(),
          #{createBy}, #{pkid}
        )
    </insert>

    <update id="updateNtTendersByPkId" parameterType="com.silita.model.TbNtTenders">
      UPDATE ${tableName} SET
        <if test="editCode !=null and editCode!=''">
            `edit_code` = #{editCode},
        </if>
        <if test="segment !=null and segment!=''">
            `segment` = #{segment},
        </if>
        <if test="enrollAddr !=null and enrollAddr!=''">
            `enroll_addr` = #{enrollAddr},
        </if>
        <if test="openingAddr !=null and openingAddr!=''">
            `opening_addr` = #{openingAddr},
        </if>
        <if test="enrollEndTime !=null and enrollEndTime!=''">
            `enroll_end_time` = #{enrollEndTime},
        </if>
        <if test="bidEndTime !=null and bidEndTime!=''">
            `bid_end_time` = #{bidEndTime},
        </if>
        <if test="bidBonds !=null and bidBonds!=''">
            `bid_bonds` = #{bidBonds},
        </if>
        <if test="bidBondsEndTime !=null and bidBondsEndTime!=''">
            `bid_bonds_end_time` = #{bidBondsEndTime},
        </if>
        <if test="keepBonds !=null and keepBonds!=''">
            `keep_bonds` = #{keepBonds},
        </if>
        <if test="otherBonds !=null and otherBonds!=''">
            `other_bonds` = #{otherBonds},
        </if>
        <if test="auditTime !=null and auditTime!=''">
            `audit_time` = #{auditTime},
        </if>
        <if test="openingPerson !=null and openingPerson!=''">
            `opening_person` = #{openingPerson},
        </if>
        <if test="openingFileFee !=null and openingFileFee!=''">
            `opening_file_fee` = #{openingFileFee},
        </if>
        <if test="otherFee !=null and otherFee!=''">
            `other_fee` = #{otherFee},
        </if>
        <if test="tenderee !=null and tenderee!=''">
            `tenderee` = #{tenderee},
        </if>
        <if test="tenderContactPerson !=null and tenderContactPerson!=''">
            `tender_contact_person` = #{tenderContactPerson},
        </if>
        <if test="tenderContactInfo !=null and tenderContactInfo!=''">
            `tender_contact_info` = #{tenderContactInfo},
        </if>
        <if test="proxyContactPerson !=null and proxyContactPerson!=''">
            `proxy_contact_person` = #{proxyContactPerson},
        </if>
        <if test="proxyContactInfo !=null and proxyContactInfo!=''">
            `proxy_contact_info` = #{proxyContactInfo},
        </if>
        <if test="proPerson !=null and proPerson!=''">
            `pro_person` = #{proPerson},
        </if>
        <if test="socialSecurity !=null and socialSecurity!=''">
            `social_security` = #{socialSecurity},
        </if>
        <if test="achievement !=null and achievement!=''">
            `achievement` = #{achievement},
        </if>
        <if test="enrollMethod !=null and enrollMethod!=''">
            `enroll_method` = #{enrollMethod},
        </if>
        <if test="completionTime !=null and completionTime!=''">
            `completion_time` = #{completionTime},
        </if>
        <if test="isFlow !=null and isFlow!=''">
            `is_flow` = #{isFlow},
        </if>
        <if test="fundsProvid !=null and fundsProvid!=''">
            `funds_provid` = #{fundsProvid},
        </if>
        <if test="certAuditAddr !=null and certAuditAddr!=''">
            `cert_audit_addr` = #{certAuditAddr},
        </if>
        <if test="filingPfm !=null and filingPfm!=''">
            `filing_pfm` = #{filingPfm},
        </if>
        <if test="controllSum !=null and controllSum!=''">
            `controll_sum` = #{controllSum},
        </if>
        <if test="proSum !=null and proSum!=''">
            `pro_sum` = #{proSum},
        </if>
        <if test="proDuration !=null and proDuration!=''">
            `pro_duration` = #{proDuration},
        </if>
        <if test="pbMode !=null and pbMode!=''">
            `pb_mode` = #{pbMode},
        </if>
        <if test="updateBy !=null and updateBy!=''">
            `update_by` = #{updateBy},
        </if>
        updated = NOW()
        WHERE pkid = #{pkid}
    </update>

    <select id="listNtTendersByNtId" parameterType="com.silita.model.TbNtTenders" resultMap="BaseResultMap">
        SELECT t1.*,
        t.biness_type, t.nt_category, t.nt_type, t.title, t.pub_date,
        t.url,
        (SELECT `area_name` FROM sys_area WHERE area_code = t.city_code) AS city_code, (SELECT `area_name` FROM sys_area WHERE area_code = t.county_code) AS county_code, t.source
        FROM ${tableName} t1
        LEFT JOIN tb_nt_mian_${source} t ON t1.nt_id = t.pkid
        WHERE t1.nt_id = #{ntId}
        ORDER BY LENGTH(t1.`segment`) ASC, t1.`segment` ASC
    </select>

    <delete id="deleteNtTendersByPkId" parameterType="Map">
        DELETE FROM ${tableName}
        <where>
            pkid IN
            <foreach collection="array" open="(" close=")" separator="," item="ele">
                #{ele}
            </foreach>
        </where>
    </delete>
</mapper>