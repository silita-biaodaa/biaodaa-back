<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silita.dao.TbCompanyHighwayGradeMapper">
    <resultMap id="BaseResultMap" type="com.silita.model.TbCompanyHighwayGrade">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="pkid" property="pkid" jdbcType="VARCHAR"/>
        <result column="com_id" property="comId" jdbcType="VARCHAR"/>
        <result column="assess_year" property="assessYear" jdbcType="INTEGER"/>
        <result column="assess_level" property="assessLevel" jdbcType="VARCHAR"/>
        <result column="assess_prov_code" property="assessProvCode" jdbcType="VARCHAR"/>
        <result column="assess_origin" property="assessOrigin" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="com_name" property="comName" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryCompanyHigway" parameterType="com.silita.model.TbCompanyHighwayGrade" resultType="java.util.Map">
        SELECT
        t.`com_id` as comId,
        GROUP_CONCAT(t.`assess_level`) as assessLevel,
        GROUP_CONCAT(t.`assess_origin`) as assessOrigin,
        t.`assess_prov_code`as assessProvCode,
        t.`assess_year` as assessYear
        FROM `tb_company_highway_grade` t
        WHERE t.`com_id` = #{comId}
        <if test="assessProvCode != null and assessProvCode != ''">
            and t.`assess_prov_code` = #{assessProvCode}
        </if>
        GROUP BY t.`assess_year`
        ORDER BY t.`assess_origin` asc , t.`assess_year` desc
    </select>

    <insert id="insertCompanyHigway" parameterType="com.silita.model.TbCompanyHighwayGrade">
        INSERT INTO `tb_company_highway_grade`
        (
        <if test="pkid != null and pkid != ''">
            `pkid`,
        </if>
        <if test="comId != null and comId != ''">
            `com_id`,
        </if>
        <if test="assessYear != null and assessYear != ''">
            `assess_year`,
        </if>
        <if test="assessLevel != null and assessLevel != ''">
            `assess_level`,
        </if>
        <if test="assessProvCode != null and assessProvCode != ''">
            `assess_prov_code`,
        </if>
        <if test="assessOrigin != null and assessOrigin != ''">
            `assess_origin`,
        </if>
        <if test="updated != null">
            `updated`,
        </if>
        <if test="updateBy != null and updateBy != ''">
            `update_by`,
        </if>
        <if test="created != null">
            `created`,
        </if>
        <if test="createBy != null and createBy != ''">
            `create_by`
        </if>
        )
        VALUES (
        <if test="pkid != null and pkid != ''">
            #{pkid},
        </if>
        <if test="comId != null and comId != ''">
            #{comId},
        </if>
        <if test="assessYear != null and assessYear != ''">
            #{assessYear},
        </if>
        <if test="assessLevel != null and assessLevel != ''">
            #{assessLevel},
        </if>
        <if test="assessProvCode != null and assessProvCode != ''">
            #{assessProvCode},
        </if>
        <if test="assessOrigin != null and assessOrigin != ''">
            #{assessOrigin},
        </if>
        <if test="updated != null">
            #{updated},
        </if>
        <if test="updateBy != null and updateBy != ''">
            #{updateBy},
        </if>
        <if test="created != null">
            #{created},
        </if>
        <if test="createBy != null and createBy != ''">
            #{createBy}
        </if>
        )
    </insert>

    <update id="updateCompanyHigway" parameterType="com.silita.model.TbCompanyHighwayGrade">
        UPDATE `tb_company_highway_grade`
        SET
        <if test="comId != null and comId != ''">
            `com_id` = #{comId},
        </if>
        <if test="assessYear != null and assessYear != ''">
            `assess_year` = #{assessYear},
        </if>
        <if test="assessLevel != null and assessLevel != ''">
            `assess_level` = #{assessLevel},
        </if>
        <if test="assessProvCode != null and assessProvCode != ''">
            `assess_prov_code` = #{assessProvCode},
        </if>
        <if test="assessOrigin != null and assessOrigin != ''">
            `assess_origin` = #{assessOrigin},
        </if>
        <if test="created != null">
            `created` = #{created},
        </if>
        <if test="createBy != null and createBy != ''">
            `create_by` = #{createBy},
        </if>
        <if test="updated != null">
            `updated` = #{updated},
        </if>
        <if test="updateBy != null and updateBy != ''">
            `update_by` = #{updateBy}
        </if>
        WHERE `pkid` = #{pkid}
    </update>

    <delete id="deleteCompanyHigway" parameterType="java.lang.String">
        delete from tb_company_highway_grade where pkid = #{pkid}
    </delete>

    <select id="queryAssessPro" resultType="java.util.Map" parameterType="java.lang.String">
        SELECT
               t.`assess_prov_code` AS assessProvCode
               ,t1.`area_name` AS areaName
        FROM `tb_company_highway_grade` t
        LEFT JOIN sys_area t1 ON t.`assess_prov_code` = t1.`area_code`
        WHERE t.`com_id` = #{comId}
        GROUP BY t.`assess_prov_code`
    </select>

    <select id="queryCompanyHighwanGradeDetail" parameterType="com.silita.model.TbCompanyHighwayGrade"
            resultMap="BaseResultMap">
        select *
        from tb_company_highway_grade
        where 1=1
        <if test="assessProvCode != null and assessProvCode != ''">
            and `assess_prov_code` = #{assessProvCode}
        </if>
        <if test="assessOrigin != null and assessOrigin != ''">
            and `assess_origin` = #{assessOrigin}
        </if>
        <if test="assessYear != null and assessYear != ''">
            and`assess_year` = #{assessYear}
        </if>
        <if test="comId != null and comId != ''">
            and `com_id` = #{comId}
        </if>
    </select>

    <select id="queryCompanyHigForCompanyList" resultType="java.util.Map"
            parameterType="com.silita.model.TbCompanyHighwayGrade">
        SELECT
        t.`com_name` AS comName,
        t1.`pkid` AS pkid,
        t1.`assess_year` AS assessYear,
        t1.`assess_prov_code` AS assessProvCode,
        t1.`assess_level` AS assessLevel,
        t2.area_name AS province
        FROM
        tb_company t
        JOIN tb_company_highway_grade t1
        ON t.`com_id` = t1.`com_id`
        left join sys_area t2 on t1.assess_prov_code = t2.area_code
        WHERE t1.assess_origin = 2
        <if test="comName != null and comName != ''">
            AND t.`com_name` like CONCAT('%', #{comName}, '%')
        </if>
        <if test="assessYear != null and assessYear != ''">
            AND t1.`assess_year` = #{assessYear}
        </if>
        <if test="assessProvCode != null and assessProvCode != ''">
            AND t1.`assess_prov_code` = #{assessProvCode}
        </if>
        <!--<if test="province != null and province != ''">-->
        <!--AND t.`regis_address` = #{province}-->
        <!--</if>-->
        <if test="assessLevel != null and assessLevel != ''">
            AND t1.`assess_level` = #{assessLevel}
        </if>
        ORDER BY t1.`assess_year` DESC,
        t1.`created` DESC
        <if test="start != null and start != '' and pageSize != null and pageSize != ''">
            LIMIT #{start}, #{pageSize}
        </if>
    </select>

    <select id="queryCompanyHigForCompanyCount" resultType="java.lang.Integer"
            parameterType="com.silita.model.TbCompanyHighwayGrade">
        SELECT
        COUNT(1)
        FROM
        tb_company t
        JOIN tb_company_highway_grade t1
        ON t.`com_id` = t1.`com_id`
        WHERE t1.assess_origin = 2
        <if test="comName != null and comName != ''">
            AND t.`com_name` like CONCAT('%', #{comName}, '%')
        </if>
        <if test="assessYear != null and assessYear != ''">
            AND t1.`assess_year` = #{assessYear}
        </if>
        <if test="assessProvCode != null and assessProvCode != ''">
            AND t1.`assess_prov_code` = #{assessProvCode}
        </if>
        <!--<if test="province != null and province != ''">-->
        <!--AND t.`regis_address` = #{province}-->
        <!--</if>-->
        <if test="assessLevel != null and assessLevel != ''">
            AND t1.`assess_level` = #{assessLevel}
        </if>
        ORDER BY t1.`assess_year` DESC,
        t1.`created` DESC
    </select>

    <insert id="batchInsertCompanyHig" parameterType="java.util.List">
        INSERT INTO `biaodaa_admin`.`tb_company_highway_grade`
        (`pkid`,
        `com_id`,
        `assess_year`,
        `assess_level`,
        `assess_prov_code`,
        `assess_origin`,
        `created`,
        `create_by`
        )
        VALUES
        <foreach collection="list" item="list" separator=",">
            (
            #{list.pkid},#{list.comId},#{list.assessYear},#{list.assessLevel},#{list.assessProvCode},'2',now(),#{list.createBy}
            )
        </foreach>
    </insert>

    <select id="queryCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        COUNT(1)
        FROM tb_company_highway_grade t1
        WHERE t1.assess_origin = 2
        <if test="comId != null and comId != ''">
            AND t1.`com_id` = #{comId}
        </if>
        <if test="year != null and year != ''">
            AND t1.`assess_year` = #{year}
        </if>
        <if test="provCode != null and provCode != ''">
            AND t1.`assess_prov_code` = #{provCode}
        </if>
        <if test="level != null and level != ''">
            AND t1.`assess_level` = #{level}
        </if>
    </select>

    <delete id="deleteCompanyHigwayForParam" parameterType="java.util.List">
        delete from tb_company_highway_grade
        where pkid in (
            <foreach collection="list" item="list" separator=",">
                #{list.pkid}
            </foreach>
        )
    </delete>
</mapper>